# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import blog_pb2 as blog__pb2

GRPC_GENERATED_VERSION = '1.65.4'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.66.0'
SCHEDULED_RELEASE_DATE = 'August 6, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in blog_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class DataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EnqueueBlog = channel.unary_unary(
                '/blogs.DataService/EnqueueBlog',
                request_serializer=blog__pb2.BlogCreateRequest.SerializeToString,
                response_deserializer=blog__pb2.BlogEnqueueResponse.FromString,
                _registered_method=True)
        self.GetBlog = channel.unary_unary(
                '/blogs.DataService/GetBlog',
                request_serializer=blog__pb2.GetBlogRequest.SerializeToString,
                response_deserializer=blog__pb2.GetBlogResponse.FromString,
                _registered_method=True)
        self.ListBlogs = channel.unary_unary(
                '/blogs.DataService/ListBlogs',
                request_serializer=blog__pb2.ListBlogsRequest.SerializeToString,
                response_deserializer=blog__pb2.ListBlogsResponse.FromString,
                _registered_method=True)
        self.UpdateBlog = channel.unary_unary(
                '/blogs.DataService/UpdateBlog',
                request_serializer=blog__pb2.UpdateBlogRequest.SerializeToString,
                response_deserializer=blog__pb2.UpdateBlogResponse.FromString,
                _registered_method=True)
        self.DeleteBlog = channel.unary_unary(
                '/blogs.DataService/DeleteBlog',
                request_serializer=blog__pb2.DeleteBlogRequest.SerializeToString,
                response_deserializer=blog__pb2.DeleteBlogResponse.FromString,
                _registered_method=True)
        self.BulkDelete = channel.unary_unary(
                '/blogs.DataService/BulkDelete',
                request_serializer=blog__pb2.BulkDeleteRequest.SerializeToString,
                response_deserializer=blog__pb2.BulkDeleteResponse.FromString,
                _registered_method=True)
        self.BulkUpdate = channel.unary_unary(
                '/blogs.DataService/BulkUpdate',
                request_serializer=blog__pb2.BulkUpdateRequest.SerializeToString,
                response_deserializer=blog__pb2.BulkUpdateResponse.FromString,
                _registered_method=True)


class DataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def EnqueueBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBlogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EnqueueBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.EnqueueBlog,
                    request_deserializer=blog__pb2.BlogCreateRequest.FromString,
                    response_serializer=blog__pb2.BlogEnqueueResponse.SerializeToString,
            ),
            'GetBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlog,
                    request_deserializer=blog__pb2.GetBlogRequest.FromString,
                    response_serializer=blog__pb2.GetBlogResponse.SerializeToString,
            ),
            'ListBlogs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBlogs,
                    request_deserializer=blog__pb2.ListBlogsRequest.FromString,
                    response_serializer=blog__pb2.ListBlogsResponse.SerializeToString,
            ),
            'UpdateBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBlog,
                    request_deserializer=blog__pb2.UpdateBlogRequest.FromString,
                    response_serializer=blog__pb2.UpdateBlogResponse.SerializeToString,
            ),
            'DeleteBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBlog,
                    request_deserializer=blog__pb2.DeleteBlogRequest.FromString,
                    response_serializer=blog__pb2.DeleteBlogResponse.SerializeToString,
            ),
            'BulkDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkDelete,
                    request_deserializer=blog__pb2.BulkDeleteRequest.FromString,
                    response_serializer=blog__pb2.BulkDeleteResponse.SerializeToString,
            ),
            'BulkUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkUpdate,
                    request_deserializer=blog__pb2.BulkUpdateRequest.FromString,
                    response_serializer=blog__pb2.BulkUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blogs.DataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('blogs.DataService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EnqueueBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blogs.DataService/EnqueueBlog',
            blog__pb2.BlogCreateRequest.SerializeToString,
            blog__pb2.BlogEnqueueResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blogs.DataService/GetBlog',
            blog__pb2.GetBlogRequest.SerializeToString,
            blog__pb2.GetBlogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBlogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blogs.DataService/ListBlogs',
            blog__pb2.ListBlogsRequest.SerializeToString,
            blog__pb2.ListBlogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blogs.DataService/UpdateBlog',
            blog__pb2.UpdateBlogRequest.SerializeToString,
            blog__pb2.UpdateBlogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blogs.DataService/DeleteBlog',
            blog__pb2.DeleteBlogRequest.SerializeToString,
            blog__pb2.DeleteBlogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BulkDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blogs.DataService/BulkDelete',
            blog__pb2.BulkDeleteRequest.SerializeToString,
            blog__pb2.BulkDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BulkUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blogs.DataService/BulkUpdate',
            blog__pb2.BulkUpdateRequest.SerializeToString,
            blog__pb2.BulkUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
